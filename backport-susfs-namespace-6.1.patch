From 2976966b16b704f2c47e430ae9e602fca7c52e0a Mon Sep 17 00:00:00 2001
From: simonpunk <simonpunk2016@gmail.com>
Date: Sat, 24 May 2025 23:57:32 +0800
Subject: [PATCH] BACKPORT: SuSFS: less check in clone_mnt() for a little
 higher efficiency

https://gitlab.com/simonpunk/susfs4ksu/-/commit/61e35118b7f5d1c6f1f264ebbee8db330ae9cc36
---
 fs/namespace.c | 15 +++++----------
 1 file changed, 5 insertions(+), 10 deletions(-)

diff --git a/fs/namespace.c b/fs/namespace.c
index 1a366cb69a37..54e863650037 100644
--- a/fs/namespace.c
+++ b/fs/namespace.c
@@ -1244,21 +1244,16 @@ static struct mount *clone_mnt(struct mount *old, struct dentry *root,
 		}
 		goto bypass_orig_flow;
 	}
-	// Secondly, check if it is zygote process and no matter it is doing unshare or not
-	if (likely(is_current_zygote_domain) && (old->mnt_id >= DEFAULT_SUS_MNT_ID)) {
+	// Lastly, just check if old->mnt_id is sus
+	if (old->mnt_id >= DEFAULT_SUS_MNT_ID) {
 		/* Important Note: 
-		 *  - Here we can't determine whether the unshare is called zygisk or not,
-		 *    so we can only patch out the unshare code in zygisk source code for now
-		 *  - But at least we can deal with old sus mounts using alloc_vfsmnt()
+		 *  - Here we can't determine whether the unshare is called by zygisk or not,
+		 *    so we can only patch out the unshare code in zygisk source code for now,
+		 *    but at least we can deal with old sus mounts using alloc_vfsmnt()
 		 */
 		mnt = alloc_vfsmnt(old->mnt_devname, true, 0);
 		goto bypass_orig_flow;
 	}
-	// Lastly, for other process that is doing unshare operation, but only deal with old sus mount
-	if ((flag & CL_COPY_MNT_NS) && (old->mnt_id >= DEFAULT_SUS_MNT_ID)) {
-		mnt = alloc_vfsmnt(old->mnt_devname, true, 0);
-		goto bypass_orig_flow;
-	}
 	mnt = alloc_vfsmnt(old->mnt_devname, false, 0);
 bypass_orig_flow:
 #else
