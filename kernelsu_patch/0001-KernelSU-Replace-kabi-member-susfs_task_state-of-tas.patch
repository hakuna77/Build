From 169b5f952658058afbd307db6929d7c7e385a0b9 Mon Sep 17 00:00:00 2001
From: JJ-Coffee <akuntrial042@gmail.com>
Date: Mon, 7 Jul 2025 20:03:38 +0000
Subject: [PATCH] KernelSU: Replace kabi member susfs_task_state of tast_struct

---
 kernel/Kconfig     | 1 +
 kernel/core_hook.c | 4 ++--
 2 files changed, 3 insertions(+), 2 deletions(-)

diff --git a/kernel/Kconfig b/kernel/Kconfig
index 8120200c..2ea51980 100644
--- a/kernel/Kconfig
+++ b/kernel/Kconfig
@@ -44,6 +44,7 @@ menu "KernelSU - SUSFS"
 config KSU_SUSFS
     bool "KernelSU addon - SUSFS"
     depends on KSU
+    depends on THREAD_INFO_IN_TASK
     default y
     help
       Patch and Enable SUSFS to kernel with KernelSU.
diff --git a/kernel/core_hook.c b/kernel/core_hook.c
index 6ee2d61c..ee1f907b 100644
--- a/kernel/core_hook.c
+++ b/kernel/core_hook.c
@@ -1091,7 +1091,7 @@ int ksu_handle_setuid(struct cred *new, const struct cred *old)
 	// - Therefore make sure your root app doesn't use isolated service for root access
 	if (new_uid.val >= 90000 && new_uid.val < 1000000) {
 			task_lock(current);
-			current->susfs_task_state |= TASK_STRUCT_NON_ROOT_USER_APP_PROC;
+			susfs_set_current_non_root_user_app_proc();
 			task_unlock(current);
 			goto out_susfs_try_umount_all;
 	}
@@ -1109,7 +1109,7 @@ int ksu_handle_setuid(struct cred *new, const struct cred *old)
 #ifdef CONFIG_KSU_SUSFS
 	else {
 		task_lock(current);
-		current->susfs_task_state |= TASK_STRUCT_NON_ROOT_USER_APP_PROC;
+		susfs_set_current_non_root_user_app_proc();
 		task_unlock(current);
 		goto out_susfs_try_umount_all;
 	}
-- 
2.34.1

